(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{275:function(t,s,a){t.exports=a.p+"assets/img/cpu_memory_ordering_in_some_architectures.afcd9f12.png"},286:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),s("p",[s("img",{attrs:{src:a(275),alt:"cpu memory ordering in some architectures"}})]),t._v(" "),s("p",[t._v("因作者水平有限，本文仅讨论 x86 架构 (TSO) 与 ARMv8 架构 (RMO)，以此加深作者本人对硬件并行部分的知识的理解。")]),t._v(" "),s("h2",{attrs:{id:"tso-total-store-ordering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tso-total-store-ordering"}},[t._v("#")]),t._v(" TSO (Total Store Ordering)")]),t._v(" "),s("h3",{attrs:{id:"can-be-reordered"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#can-be-reordered"}},[t._v("#")]),t._v(" Can be reordered")]),t._v(" "),s("ul",{staticClass:"contains-task-list"},[s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{disabled:"",type:"checkbox"}}),t._v(" Load Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{disabled:"",type:"checkbox"}}),t._v(" Load Store")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Store Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{disabled:"",type:"checkbox"}}),t._v(" Store Store")])]),t._v(" "),s("h3",{attrs:{id:"如何理解-因无法验证-仅供参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-因无法验证-仅供参考"}},[t._v("#")]),t._v(" 如何理解（因无法验证，仅供参考）：")]),t._v(" "),s("p",[t._v("CPU 拥有 Store Buffer，当需要 Load 时，如果其它 CPU 没有及时刷出 Store Buffer 则会发生 Store Load 重排序。")]),t._v(" "),s("h2",{attrs:{id:"pso-part-store-ordering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pso-part-store-ordering"}},[t._v("#")]),t._v(" PSO (Part Store Ordering)")]),t._v(" "),s("h3",{attrs:{id:"can-be-reordered-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#can-be-reordered-2"}},[t._v("#")]),t._v(" Can be reordered")]),t._v(" "),s("ul",{staticClass:"contains-task-list"},[s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{disabled:"",type:"checkbox"}}),t._v(" Load Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{disabled:"",type:"checkbox"}}),t._v(" Load Store")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Store Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Store Store")])]),t._v(" "),s("h3",{attrs:{id:"如何理解-因无法验证-仅供参考-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-因无法验证-仅供参考-2"}},[t._v("#")]),t._v(" 如何理解（因无法验证，仅供参考）：")]),t._v(" "),s("p",[t._v("Store Load 原因同上")]),t._v(" "),s("p",[t._v("当需要 Store 多个值时，如果发现 Store 的值没有在 Cache 中时，则会延迟写入到内存，此时会发生 Store Store 重排序。")]),t._v(" "),s("h2",{attrs:{id:"rmo-relaxed-memory-ordering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rmo-relaxed-memory-ordering"}},[t._v("#")]),t._v(" RMO (Relaxed Memory Ordering)")]),t._v(" "),s("h3",{attrs:{id:"can-be-reordered-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#can-be-reordered-3"}},[t._v("#")]),t._v(" Can be reordered")]),t._v(" "),s("ul",{staticClass:"contains-task-list"},[s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Load Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Load Store")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Store Load")]),t._v(" "),s("li",{staticClass:"task-list-item"},[s("input",{staticClass:"task-list-item-checkbox",attrs:{checked:"",disabled:"",type:"checkbox"}}),t._v(" Store Store")])]),t._v(" "),s("h3",{attrs:{id:"如何理解-因无法验证-仅供参考-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-因无法验证-仅供参考-3"}},[t._v("#")]),t._v(" 如何理解（因无法验证，仅供参考）：")]),t._v(" "),s("p",[t._v("Store Load 和 Store Store 原因同上")]),t._v(" "),s("p",[t._v("如果发现 Load 的值没有在 Cache 中时，则会从内存中读取，此时会发生 Load Load 或者 Load Store 重排序。")]),t._v(" "),s("h2",{attrs:{id:"关于-编译器屏障-与-内存屏障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-编译器屏障-与-内存屏障"}},[t._v("#")]),t._v(" 关于 编译器屏障 与 内存屏障")]),t._v(" "),s("h3",{attrs:{id:"编译器屏障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译器屏障"}},[t._v("#")]),t._v(" 编译器屏障")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<linux/kernel.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("barrier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令重排序只在屏障两边生效")]),t._v("\n")])])]),s("p",[t._v("抑制编译器重排序优化，不影响硬件对指令的执行顺序。")]),t._v(" "),s("h3",{attrs:{id:"内存屏障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存屏障"}},[t._v("#")]),t._v(" 内存屏障")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<asm/system.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("smp_mb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何内存访问都将在屏障之前完成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("smp_rmb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何内存读访问都将在屏障之前完成（不限制 写访问）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("smp_wmb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何内存写访问都将在屏障之前完成（不限制 读访问）")]),t._v("\n")])])]),s("p",[t._v("抑制硬件级别的重排序优化。")])])}),[],!1,null,null,null);s.default=r.exports}}]);